name: Build and Deploy to GCP

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-deploy:
    name: Build and Deploy
    runs-on: ubuntu-24.04

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDED }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Setup gcloud environment
        uses: google-github-actions/setup-gcloud@v2

      - name: Google cloud info
        run: gcloud info

      - name: Setup docker
        run: gcloud auth configure-docker

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Ktlint
        run: ./mvnw -B ktlint:check

      - run: npm ci
      - name: Eslint / prettier
        run: npm run lint

      - name: Install Playwright browsers
        run: npx -y playwright install --with-deps

      - name: Start backend server in background
        run: |
          echo "Starting backend server..."
          # Use CI profile which has Google Drive integration disabled
          ./mvnw -B compile spring-boot:run -Dspring-boot.run.profiles=ci -Pdevelop > backend.log 2>&1 &
          echo $! > backend.pid
          echo "Backend server started with PID $(cat backend.pid)"

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend to start..."
          # First check if the port is open
          timeout 300 bash -c 'until nc -z localhost 8080; do sleep 2; done'
          echo "Backend port is open"
          # Then check if health endpoint is available (fallback to basic port check)
          timeout 60 bash -c 'until curl -s -f http://localhost:8080/actuator/health > /dev/null || curl -s -f http://localhost:8080 > /dev/null; do sleep 2; done'
          echo "Backend is ready!"

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: Show backend logs on failure
        if: failure()
        run: |
          echo "=== Backend Server Logs ==="
          if [ -f backend.log ]; then
            tail -100 backend.log
          else
            echo "No backend.log file found"
          fi

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/
            backend.log
          retention-days: 30

      - name: Stop backend server
        if: always()
        run: |
          if [ -f backend.pid ]; then
            kill $(cat backend.pid) || true
            rm backend.pid
          fi
          if [ -f backend.log ]; then
            rm backend.log
          fi

      - name: Full build
        run: ./mvnw -B package

      - name: Build and Deploy
        run: ./mvnw -B clean compile jib:build -Pfrontend -Dnpm.ci.skip -Djib.to.image=eu.gcr.io/flock-community/flock-eco-workday -Djib.to.tags=${{ github.sha }} --file pom.xml

      - name: Build and Deploy Development version
        run: ./mvnw -B compile jib:build -Pdevelop,frontend -Dnpm.ci.skip -Dnpm.skip -Djib.container.environment=SPRING_PROFILES_ACTIVE=develop -Djib.to.image=eu.gcr.io/flock-community/flock-eco-workday-develop -Djib.to.tags=${{ github.sha }} --file pom.xml
