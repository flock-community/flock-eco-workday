- id: workday-api-calls
  upstream:
    #    url: http://workday:8080
    # to allow to use 'local' app rather than docker one
    url: http://host.docker.internal:8080
  version: v0.40.2
  match:
    # exclude api/workday/ calls, but allow al others
    url: http://<(fe-)?>workday.flock.local:8081/<api(?!(/workdays/)).*>
    methods:
      - GET
      - POST
      - PUT
      - DELETE
  authenticators:
    - handler: cookie_session
  authorizer:
    handler: remote_json
    config:
      payload: |
        {
          "namespace": "Person",
          "object": "{{ .MatchContext.Header.Get "Context-Person-Id" }}",
          "relation": "view",
          "subject_set" : {
             "namespace": "User",
             "object": "{{print .Subject}}",
             "relation": ""
           }
        }
  mutators:
    - handler: header
    - handler: id_token
  errors:
    - handler: redirect



- id: workday-api-call-bootstrap
  upstream:
    #    url: http://workday:8080
    # to allow to use 'local' app rather than docker one
    url: http://host.docker.internal:8080
  version: v0.40.2
  match:
    url: http://<(fe-)?>workday.flock.local:8081/bootstrap
    methods:
      - GET
  authenticators:
    - handler: cookie_session
  authorizer:
    handler: allow
  mutators:
    - handler: header
    - handler: id_token
  errors:
    - handler: redirect


- id: workday-fe-resources-react
  upstream:
    #    url: http://workday:8080
    # to allow to use 'local' app rather than docker one
    url: http://host.docker.internal:3000
  version: v0.40.2
  match:
    # all urls not starting with /api or /login
    url: http://fe-workday.flock.local:8081/<(?!(api|login|bootstrap)).*>
    methods:
      - GET
  authenticators:
    - handler: cookie_session
  authorizer:
    handler: allow
  mutators:
    - handler: header
    - handler: id_token
  errors:
    - handler: redirect


- id: workday-fe-resources
  upstream:
#    url: http://workday:8080
    # to allow to use 'local' app rather than docker one
    url: http://host.docker.internal:8080
  version: v0.40.2
  match:
    # all urls not starting with /api or /login
    url: http://workday.flock.local:8081/<(?!(api|login|bootstrap)).*>
    methods:
      - GET
  authenticators:
    - handler: cookie_session
  authorizer:
      handler: allow
  mutators:
    - handler: header
    - handler: id_token
  errors:
    - handler: redirect


- id: workday-get
  upstream:
    #    url: http://workday:8080
    # to allow to use 'local' app rather than docker one
    url: http://host.docker.internal:8080
  version: v0.40.2
  match:
    url: http://<(fe-)?>workday.flock.local:8081/api/workdays/<.*>
    methods:
      - GET
  authenticators:
    - handler: cookie_session
  authorizer:
    handler: remote_json
    config:
      payload: |
        {
          "namespace": "Workday",
          "object": "{{ printIndex .MatchContext.RegexpCaptureGroups 2 }}",
          "relation": "view",
          "subject_set" : {
             "namespace": "User",
             "object": "{{print .Subject}}",
             "relation": ""
           }
        }
  mutators:
    - handler: header
    - handler: id_token
  errors:
    - handler: redirect


- id: workday-put
  upstream:
    #    url: http://workday:8080
    # to allow to use 'local' app rather than docker one
    url: http://host.docker.internal:8080
  version: v0.40.2
  match:
    url: http://<(fe-)?>workday.flock.local:8081/api/workdays/<.*>
    methods:
      - PUT
  authenticators:
    - handler: cookie_session
  authorizer:
    handler: remote_json
    config:
      payload: |
        {
          "namespace": "Workday",
          "object": "{{ printIndex .MatchContext.RegexpCaptureGroups 2 }}",
          "relation": "view",
          "subject_set" : {
             "namespace": "User",
             "object": "{{print .Subject}}",
             "relation": ""
           }
        }
  mutators:
    - handler: header
    - handler: id_token
  errors:
    - handler: redirect
